//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;
using System.Web.Services.Protocols;

// 
// This source code was auto-generated by xsd, Version=2.0.50727.1432.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release", IsNullable=false)]

public partial class MultiSpeakMsgHeader : SoapHeader {
    
    private string majorVersionField;
    
    private string minorVersionField;
    
    private string buildField;
    
    private string branchField;
    
    private BuildDescriptor buildStringField;
    
    private string userIDField;
    
    private string pwdField;
    
    private string appNameField;
    
    private string appVersionField;
    
    private string companyField;
    
    private DefaultCurrencyCode defaultCurrencyCodeField;
    
    private bool defaultCurrencyCodeFieldSpecified;
    
    private MessageHeaderCSUnits cSUnitsField;
    
    private string coordinateSystemNameField;
    
    private string coordinateSystemAuthorityField;
    
    private string coordinateSystemAuthorityCodeField;
    
    private string datumField;
    
    private string sessionIDField;
    
    private string previousSessionIDField;
    
    private string objectsRemainingField;
    
    private string lastSentField;
    
    private string registrationIDField;
    
    private string messageIDField;
    
    private System.DateTime timeStampField;
    
    private bool timeStampFieldSpecified;
    
    private MessageContext contextField;
    
    private bool contextFieldSpecified;
    
    private string auditIDField;
    
    private string auditPasswordField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    public MultiSpeakMsgHeader() {
        this.cSUnitsField = MessageHeaderCSUnits.feet;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string Build {
        get {
            return this.buildField;
        }
        set {
            this.buildField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string Branch {
        get {
            return this.branchField;
        }
        set {
            this.branchField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public BuildDescriptor BuildString {
        get {
            return this.buildStringField;
        }
        set {
            this.buildStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string UserID {
        get {
            return this.userIDField;
        }
        set {
            this.userIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Pwd {
        get {
            return this.pwdField;
        }
        set {
            this.pwdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AppName {
        get {
            return this.appNameField;
        }
        set {
            this.appNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AppVersion {
        get {
            return this.appVersionField;
        }
        set {
            this.appVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Company {
        get {
            return this.companyField;
        }
        set {
            this.companyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DefaultCurrencyCode DefaultCurrencyCode {
        get {
            return this.defaultCurrencyCodeField;
        }
        set {
            this.defaultCurrencyCodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultCurrencyCodeSpecified {
        get {
            return this.defaultCurrencyCodeFieldSpecified;
        }
        set {
            this.defaultCurrencyCodeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    [System.ComponentModel.DefaultValueAttribute(MessageHeaderCSUnits.feet)]
    public MessageHeaderCSUnits CSUnits {
        get {
            return this.cSUnitsField;
        }
        set {
            this.cSUnitsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CoordinateSystemName {
        get {
            return this.coordinateSystemNameField;
        }
        set {
            this.coordinateSystemNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CoordinateSystemAuthority {
        get {
            return this.coordinateSystemAuthorityField;
        }
        set {
            this.coordinateSystemAuthorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string CoordinateSystemAuthorityCode {
        get {
            return this.coordinateSystemAuthorityCodeField;
        }
        set {
            this.coordinateSystemAuthorityCodeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Datum {
        get {
            return this.datumField;
        }
        set {
            this.datumField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string SessionID {
        get {
            return this.sessionIDField;
        }
        set {
            this.sessionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string PreviousSessionID {
        get {
            return this.previousSessionIDField;
        }
        set {
            this.previousSessionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
    public string ObjectsRemaining {
        get {
            return this.objectsRemainingField;
        }
        set {
            this.objectsRemainingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string LastSent {
        get {
            return this.lastSentField;
        }
        set {
            this.lastSentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RegistrationID {
        get {
            return this.registrationIDField;
        }
        set {
            this.registrationIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string MessageID {
        get {
            return this.messageIDField;
        }
        set {
            this.messageIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public System.DateTime TimeStamp {
        get {
            return this.timeStampField;
        }
        set {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TimeStampSpecified {
        get {
            return this.timeStampFieldSpecified;
        }
        set {
            this.timeStampFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public MessageContext Context {
        get {
            return this.contextField;
        }
        set {
            this.contextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ContextSpecified {
        get {
            return this.contextFieldSpecified;
        }
        set {
            this.contextFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AuditID {
        get {
            return this.auditIDField;
        }
        set {
            this.auditIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string AuditPassword {
        get {
            return this.auditPasswordField;
        }
        set {
            this.auditPasswordField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
public enum BuildDescriptor {
    
    /// <remarks/>
    PR,
    
    /// <remarks/>
    RC,
    
    /// <remarks/>
    Branch,
    
    /// <remarks/>
    Release,
    
    /// <remarks/>
    Other,
    
    /// <remarks/>
    Unknown,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
public enum DefaultCurrencyCode {
    
    /// <remarks/>
    USD,
    
    /// <remarks/>
    EUR,
    
    /// <remarks/>
    AED,
    
    /// <remarks/>
    AFN,
    
    /// <remarks/>
    ALL,
    
    /// <remarks/>
    AMD,
    
    /// <remarks/>
    ANG,
    
    /// <remarks/>
    AOA,
    
    /// <remarks/>
    ARS,
    
    /// <remarks/>
    AUD,
    
    /// <remarks/>
    AWG,
    
    /// <remarks/>
    AZN,
    
    /// <remarks/>
    BAM,
    
    /// <remarks/>
    BBD,
    
    /// <remarks/>
    BDT,
    
    /// <remarks/>
    BGN,
    
    /// <remarks/>
    BHD,
    
    /// <remarks/>
    BIF,
    
    /// <remarks/>
    BMD,
    
    /// <remarks/>
    BND,
    
    /// <remarks/>
    BOB,
    
    /// <remarks/>
    BOV,
    
    /// <remarks/>
    BRL,
    
    /// <remarks/>
    BSD,
    
    /// <remarks/>
    BTN,
    
    /// <remarks/>
    BWP,
    
    /// <remarks/>
    BYR,
    
    /// <remarks/>
    BZD,
    
    /// <remarks/>
    CAD,
    
    /// <remarks/>
    CDF,
    
    /// <remarks/>
    CHE,
    
    /// <remarks/>
    CHF,
    
    /// <remarks/>
    CHW,
    
    /// <remarks/>
    CLF,
    
    /// <remarks/>
    CLP,
    
    /// <remarks/>
    CNY,
    
    /// <remarks/>
    COP,
    
    /// <remarks/>
    COU,
    
    /// <remarks/>
    CRC,
    
    /// <remarks/>
    CUP,
    
    /// <remarks/>
    CVE,
    
    /// <remarks/>
    CZK,
    
    /// <remarks/>
    DJF,
    
    /// <remarks/>
    DKK,
    
    /// <remarks/>
    DOP,
    
    /// <remarks/>
    DZD,
    
    /// <remarks/>
    EEK,
    
    /// <remarks/>
    EGP,
    
    /// <remarks/>
    ERN,
    
    /// <remarks/>
    ETB,
    
    /// <remarks/>
    FJD,
    
    /// <remarks/>
    FKP,
    
    /// <remarks/>
    GBP,
    
    /// <remarks/>
    GEL,
    
    /// <remarks/>
    GHS,
    
    /// <remarks/>
    GIP,
    
    /// <remarks/>
    GMD,
    
    /// <remarks/>
    GNF,
    
    /// <remarks/>
    GTQ,
    
    /// <remarks/>
    GYD,
    
    /// <remarks/>
    HKD,
    
    /// <remarks/>
    HNL,
    
    /// <remarks/>
    HRK,
    
    /// <remarks/>
    HTG,
    
    /// <remarks/>
    HUF,
    
    /// <remarks/>
    IDR,
    
    /// <remarks/>
    ILS,
    
    /// <remarks/>
    INR,
    
    /// <remarks/>
    IQD,
    
    /// <remarks/>
    IRR,
    
    /// <remarks/>
    ISK,
    
    /// <remarks/>
    JMD,
    
    /// <remarks/>
    JOD,
    
    /// <remarks/>
    JPY,
    
    /// <remarks/>
    KES,
    
    /// <remarks/>
    KGS,
    
    /// <remarks/>
    KHR,
    
    /// <remarks/>
    KMF,
    
    /// <remarks/>
    KPW,
    
    /// <remarks/>
    KRW,
    
    /// <remarks/>
    KWD,
    
    /// <remarks/>
    KYD,
    
    /// <remarks/>
    KZT,
    
    /// <remarks/>
    LAK,
    
    /// <remarks/>
    LBP,
    
    /// <remarks/>
    LKR,
    
    /// <remarks/>
    LRD,
    
    /// <remarks/>
    LSL,
    
    /// <remarks/>
    LTL,
    
    /// <remarks/>
    LVL,
    
    /// <remarks/>
    LYD,
    
    /// <remarks/>
    MAD,
    
    /// <remarks/>
    MDL,
    
    /// <remarks/>
    MGA,
    
    /// <remarks/>
    MKD,
    
    /// <remarks/>
    MMK,
    
    /// <remarks/>
    MNT,
    
    /// <remarks/>
    MOP,
    
    /// <remarks/>
    MRO,
    
    /// <remarks/>
    MUR,
    
    /// <remarks/>
    MVR,
    
    /// <remarks/>
    MWK,
    
    /// <remarks/>
    MXN,
    
    /// <remarks/>
    MXV,
    
    /// <remarks/>
    MYR,
    
    /// <remarks/>
    MZN,
    
    /// <remarks/>
    NAD,
    
    /// <remarks/>
    NGN,
    
    /// <remarks/>
    NIO,
    
    /// <remarks/>
    NOK,
    
    /// <remarks/>
    NPR,
    
    /// <remarks/>
    NZD,
    
    /// <remarks/>
    OMR,
    
    /// <remarks/>
    PAB,
    
    /// <remarks/>
    PEN,
    
    /// <remarks/>
    PGK,
    
    /// <remarks/>
    PHP,
    
    /// <remarks/>
    PKR,
    
    /// <remarks/>
    PLN,
    
    /// <remarks/>
    PYG,
    
    /// <remarks/>
    QAR,
    
    /// <remarks/>
    RON,
    
    /// <remarks/>
    RSD,
    
    /// <remarks/>
    RUB,
    
    /// <remarks/>
    RWF,
    
    /// <remarks/>
    SAR,
    
    /// <remarks/>
    SBD,
    
    /// <remarks/>
    SCR,
    
    /// <remarks/>
    SDG,
    
    /// <remarks/>
    SEK,
    
    /// <remarks/>
    SGD,
    
    /// <remarks/>
    SHP,
    
    /// <remarks/>
    SKK,
    
    /// <remarks/>
    SLL,
    
    /// <remarks/>
    SOS,
    
    /// <remarks/>
    SRD,
    
    /// <remarks/>
    STD,
    
    /// <remarks/>
    SYP,
    
    /// <remarks/>
    SZL,
    
    /// <remarks/>
    THB,
    
    /// <remarks/>
    TJS,
    
    /// <remarks/>
    TMM,
    
    /// <remarks/>
    TND,
    
    /// <remarks/>
    TOP,
    
    /// <remarks/>
    TRY,
    
    /// <remarks/>
    TTD,
    
    /// <remarks/>
    TWD,
    
    /// <remarks/>
    TZS,
    
    /// <remarks/>
    UAH,
    
    /// <remarks/>
    UGX,
    
    /// <remarks/>
    USN,
    
    /// <remarks/>
    USS,
    
    /// <remarks/>
    UYU,
    
    /// <remarks/>
    UZS,
    
    /// <remarks/>
    VEF,
    
    /// <remarks/>
    VND,
    
    /// <remarks/>
    VUV,
    
    /// <remarks/>
    WST,
    
    /// <remarks/>
    XAF,
    
    /// <remarks/>
    XAG,
    
    /// <remarks/>
    XAU,
    
    /// <remarks/>
    XBA,
    
    /// <remarks/>
    XBB,
    
    /// <remarks/>
    XBC,
    
    /// <remarks/>
    XBD,
    
    /// <remarks/>
    XCD,
    
    /// <remarks/>
    XDR,
    
    /// <remarks/>
    XFU,
    
    /// <remarks/>
    XOF,
    
    /// <remarks/>
    XPD,
    
    /// <remarks/>
    XPF,
    
    /// <remarks/>
    XPT,
    
    /// <remarks/>
    XTS,
    
    /// <remarks/>
    XXX,
    
    /// <remarks/>
    YER,
    
    /// <remarks/>
    ZAR,
    
    /// <remarks/>
    ZMK,
    
    /// <remarks/>
    ZWD,
    
    /// <remarks/>
    ADF,
    
    /// <remarks/>
    ADP,
    
    /// <remarks/>
    ATS,
    
    /// <remarks/>
    BEF,
    
    /// <remarks/>
    CYP,
    
    /// <remarks/>
    DEM,
    
    /// <remarks/>
    ESP,
    
    /// <remarks/>
    FIM,
    
    /// <remarks/>
    FRF,
    
    /// <remarks/>
    GRD,
    
    /// <remarks/>
    IEP,
    
    /// <remarks/>
    ITL,
    
    /// <remarks/>
    LUF,
    
    /// <remarks/>
    MCF,
    
    /// <remarks/>
    MTL,
    
    /// <remarks/>
    NLG,
    
    /// <remarks/>
    PTE,
    
    /// <remarks/>
    SIT,
    
    /// <remarks/>
    SML,
    
    /// <remarks/>
    VAL,
    
    /// <remarks/>
    XEU,
    
    /// <remarks/>
    Other,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
public enum MessageHeaderCSUnits {
    
    /// <remarks/>
    feet,
    
    /// <remarks/>
    meters,
    
    /// <remarks/>
    USSurveyFeet,
    
    /// <remarks/>
    other,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
public enum MessageContext {
    
    /// <remarks/>
    Production,
    
    /// <remarks/>
    Testing,
    
    /// <remarks/>
    Development,
    
    /// <remarks/>
    Study,
    
    /// <remarks/>
    Training,
    
    /// <remarks/>
    Other,
}

